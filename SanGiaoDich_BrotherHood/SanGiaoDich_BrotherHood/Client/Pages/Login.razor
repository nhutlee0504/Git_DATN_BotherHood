@page "/login"
@using System.ComponentModel.DataAnnotations
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<style>
    .alert {
        border-radius: 0.5rem;
        padding: 1rem;
        font-size: 1rem;
        margin-bottom: 1rem;
    }

    .alert-danger {
        background-color: #dc3545;
        color: #ffffff;
    }

    .alert-success {
        background-color: #28a745;
        color: #ffffff;
    }

    .btn-google, .btn-facebook {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }

        .btn-google img, .btn-facebook img {
            width: 20px;
            height: 20px;
        }

    .btn-google {
        background-color: white;
        border-color: bl;
    }

    .btn-facebook {
        background-color: #4267B2;
        color: white;
    }

    /* Khung nhỏ gọn */
    .form-container {
        max-width: 400px; /* Điều chỉnh kích thước khung */
        margin: 0 auto; /* Căn giữa khung */
        padding: 2rem; /* Điều chỉnh độ dày padding */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

        /* Điều chỉnh khoảng cách trong form */
        .form-container h2, .form-container .mb-3, .form-container .text-center {
            margin-bottom: 1rem; /* Điều chỉnh khoảng cách giữa các phần */
        }

        /* Giảm chiều cao nút bấm */
        .form-container button {
            height: 40px;
        }

    /* Gạch chân cho thẻ a */
    a {
        text-decoration: underline; /* Thêm gạch chân */
        color: #007bff; /* Màu cho thẻ a */
    }
</style>

<div class="container">
    <div class="row justify-content-center mt-5 mb-5">
        <div class="col-md-6">
            <div class="form-container p-4 rounded bg-white shadow-sm">
                <h2 class="text-center mb-4">Đăng nhập tài khoản</h2>
                @if (!string.IsNullOrEmpty(SuccessMessage))
                {
                    <div class="alert alert-success" role="alert">
                        @SuccessMessage
                    </div>
                }
                @if (!string.IsNullOrEmpty(ErrorMessage))
                {
                    <div class="alert alert-danger" role="alert">
                        @ErrorMessage
                    </div>
                }

                <EditForm Model="@this" OnValidSubmit="HandleLogin">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="mb-3">
                        <label for="UserName" class="form-label">Tên tài khoản</label>
                        <InputText id="UserName" class="form-control rounded-start" @bind-Value="UserName" placeholder="Nhập tên tài khoản" />
                        <ValidationMessage For="@(() => UserName)" />
                    </div>
                    <div class="mb-3">
                        <label for="Password" class="form-label">Mật khẩu</label>
                        <div class="input-group">
                            <InputText id="Password" type="password" class="form-control rounded-start" @bind-Value="Password" placeholder="Nhập mật khẩu" />
                        </div>
                        <ValidationMessage For="@(() => Password)" />
                    </div>
                    <button type="submit" class="btn btn-success btn-block w-100 rounded-start">Đăng nhập</button>
                    <div class="text-right mt-3">
                        <a href="forgotPass" class="text-primary">Quên mật khẩu?</a>
                    </div>
                    <div class="text-center mt-3">
                        Bạn chưa có tài khoản? <a class="text-primary" href="Pages/Register">Đăng ký tài khoản</a><br />
                    </div>
                    <div class="text-center mt-3"><strong>Hoặc đăng nhập bằng</strong></div>
                    <div class="text-center mt-3">
                        <a onclick="LoginWithGoogle" class="btn btn-google btn-block rounded-start border w-100">
                            <img src="https://developers.google.com/identity/images/g-logo.png" alt="Google logo" />
                            Đăng nhập với Google
                        </a>
                    </div>
                    <div class="text-center mt-3">
                        <a onclick="LoginWithFacebook" class="btn btn-facebook btn-block rounded-start w-100" style="color: white;">
                            <img src="https://upload.wikimedia.org/wikipedia/commons/5/51/Facebook_f_logo_%282019%29.svg" alt="Facebook logo" />
                            Đăng nhập với Facebook
                        </a>
                    </div>

                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private string UserName { get; set; }
    private string Password { get; set; }
    private string ErrorMessage { get; set; }
    private string SuccessMessage { get; set; }
    private string Token { get; set; }

    private async Task HandleLogin()
    {
        var loginDto = new { UserName, Password };

        try
        {
            var response = await HttpClient.PostAsJsonAsync("api/user/LoginUser", loginDto);

            if (response.IsSuccessStatusCode)
            {
                Token = await response.Content.ReadAsStringAsync();
                SuccessMessage = "Đăng nhập thành công!";

                // Lưu token vào local storage
                await JSRuntime.InvokeVoidAsync("localStorage.setItem", "token", Token);

                // Thiết lập token cho các yêu cầu HTTP sau này
                HttpClient.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", Token);

                // Quay về trang chủ
                NavigationManager.NavigateTo("/", forceLoad: true);
            }
            else
            {
                var errorMessage = await response.Content.ReadAsStringAsync();
                ErrorMessage = errorMessage;
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = "Có lỗi xảy ra: " + ex.Message;
        }
    }
}
