@page "/dangnhap"
@inject HttpClient http
@inject IJSRuntime jsruntime
@inject NavigationManager navigationManager

<h3>Đăng Nhập</h3>

<form @onsubmit="HandleLogin">
    <div class="form-group">
        <label for="userName">Tên người dùng</label>
        <input type="text" class="form-control" id="userName" @bind="UserName" required />
    </div>
    <div class="form-group">
        <label for="password">Mật khẩu</label>
        <input type="password" class="form-control" id="password" @bind="Password" required />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Đăng Nhập</button>
    </div>
    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="alert alert-danger">@ErrorMessage</div>
    }
    @if (!string.IsNullOrEmpty(SuccessMessage))
    {
        <div class="alert alert-success">@SuccessMessage</div>
    }
    @if (!string.IsNullOrEmpty(Token))
    {
        <div class="alert alert-info">
            <strong>Token:</strong> @Token
        </div>
    }
</form>
<a href="get-account-info">qua</a>

@code {
    private string UserName { get; set; }
    private string Password { get; set; }
    private string ErrorMessage { get; set; }
    private string SuccessMessage { get; set; }
    private string Token { get; set; }

    private async Task HandleLogin()
    {
        var loginDto = new { UserName, Password };

        try
        {
            var response = await http.PostAsJsonAsync("api/user/LoginUser", loginDto);

            if (response.IsSuccessStatusCode)
            {
                Token = await response.Content.ReadAsStringAsync();
                SuccessMessage = "Đăng nhập thành công!";

                // Lưu token vào local storage
                await jsruntime.InvokeVoidAsync("localStorage.setItem", "token", Token);

                // Thiết lập token cho các yêu cầu HTTP sau này
                http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", Token);

                // Quay về trang chủ
                navigationManager.NavigateTo("/", forceLoad: true);
            }
            else
            {
                var errorMessage = await response.Content.ReadAsStringAsync();
                ErrorMessage = errorMessage;
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = "Có lỗi xảy ra: " + ex.Message;
        }
    }
}
